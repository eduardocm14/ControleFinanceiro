@page
@model WebAppControleFinanceiro.Pages.IndexModel
@{
    ViewData["Title"] = "";
}

<h5>Controle Financeiro</h5>

<div class="card mb-4">
    <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
        <div>
            <i class="fas fa-filter"></i> Filtro de Contas
        </div>
        <button class="btn btn-light" type="button" id="toggleFilterBtn">
            <i class="fas fa-filter"></i> Mostrar Filtros
        </button>
    </div>
    <div class="card-body" id="filterForm" style="display: none;">
        <!-- Formulário de Filtro -->
        <form method="get" action="@Url.Page("Index")" class="p-3">
            <div class="row">
                <!-- Filtro de Datas -->
                <div class="form-group col-md-3 mb-2">
                    <label for="dateFilter" class="text-info">Filtro de Datas</label>
                    <select id="dateFilter" name="DateFilter" class="form-control border-info">
                        <option value="">Selecione</option>
                        <option value="Last7Days">Últimos 7 dias</option>
                        <option value="Last15Days">Últimos 15 dias</option>
                        <option value="Last20Days">Últimos 20 dias</option>
                        <option value="ThisMonth">Este mês</option>
                    </select>
                </div>
                <!-- Tipo de Filtro -->
                <div class="form-group col-md-3 mb-2">
                    <label for="filterType" class="text-info">Tipo de Filtro</label>
                    <select id="filterType" name="FilterType" class="form-control border-info">
                        <option value="Vencimento">Vencimento</option>
                        <option value="Pagamento">Pagamento</option>
                    </select>
                </div>
                <!-- Data de Início -->
                <div class="form-group col-md-3 mb-2">
                    <label for="startDate" class="text-info">Data de Início</label>
                    <input type="date" id="startDate" name="StartDate" class="form-control border-info" />
                </div>
                <!-- Data de Fim -->
                <div class="form-group col-md-3 mb-2">
                    <label for="endDate" class="text-info">Data de Fim</label>
                    <input type="date" id="endDate" name="EndDate" class="form-control border-info" />
                </div>
            </div>
            <button type="submit" class="btn btn-success w-100" title="Clique para filtrar as contas com base nas datas selecionadas">
                <i class="fas fa-search"></i> Filtrar
            </button>
        </form>
    </div>
</div>

<!-- Tabela de Listagem -->
<div class="card">
    <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
        <div>
            <i class="fas fa-list"></i> Lista de Contas
        </div>
        <div>
            <span>Total de Registros: @Model.Contas.Count()</span>
            <span class="ml-3">Valor Total: @Model.Contas.Sum(c => c.Valor).ToString("C")</span>
            <span class="ml-3">Valor Total Pago: @Model.Contas.Where(c => c.Pago).Sum(c => c.Valor).ToString("C")</span>
        </div>
        <!-- Botão Nova Conta -->
        <button type="button" class="btn btn-primary"
                title="Incluir Nova Conta"
                data-toggle="modal"
                data-target="#createAccountModal">
            <i class="fas fa-plus-circle"></i>
        </button>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover table-bordered table-sm mb-0">
                <thead>
                    <tr>
                        <th class="text-center">Código</th>
                        <th>Nome</th>
                        <th class="text-center">Valor</th>
                        <th class="text-center">Data Vencimento</th>
                        <th class="text-center">Data Pagamento</th>
                        <th class="text-center">Pago</th>
                        <th class="text-center">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var conta in Model.Contas)
                    {
                        <tr>
                            <td class="text-center">@conta.Id</td>
                            <td>@conta.Nome</td>
                            <td class="text-center">@conta.Valor.ToString("C")</td>
                            <td class="text-center">@conta.DataVencimento.ToShortDateString()</td>
                            <td class="text-center">@(conta.DataPagamento.HasValue ? conta.DataPagamento.Value.ToShortDateString() : "X")</td>
                            <td class="text-center">
                                @if (conta.Pago)
                                {
                                    <span class="badge badge-success">Sim</span>
                                }
                                else
                                {
                                    <span class="badge badge-danger">Não</span>
                                }
                            </td>
                            <td class="text-center">
                                @if (!conta.Pago)
                                {
                                    <a href="#" class="btn btn-warning btn-sm" title="Editar"
                                       data-toggle="modal" data-target="#editAccountModal"
                                       data-id="@conta.Id"
                                       data-name="@conta.Nome"
                                       data-value="@conta.Valor.ToString("F2")"
                                       data-duedate="@conta.DataVencimento.ToString("yyyy-MM-dd")">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="#" class="btn btn-danger btn-sm ml-2" title="Excluir"
                                       data-toggle="modal" data-target="#deleteModal"
                                       data-url="@Url.Page("Delete", new { id = conta.Id })"
                                       data-id="@conta.Id" data-name="@conta.Nome">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                    <a href="#" class="btn btn-primary btn-sm ml-2" title="Pagar"
                                       data-toggle="modal" data-target="#paymentModal"
                                       data-id="@conta.Id"
                                       data-name="@conta.Nome"
                                       data-value="@conta.Valor.ToString("F2")"
                                       data-duedate="@conta.DataVencimento.ToString("yyyy-MM-dd")">
                                        <i class="fas fa-money-bill-wave"></i>
                                    </a>
                                }
                                else
                                {
                                    <i class="fas fa-lock" title="Conta Paga não pode ser alterada"></i>
                                }
                            </td>
                        </tr>
                    }
                    @if (!Model.Contas.Any())
                    {
                        <tr>
                            <td colspan="7" class="text-center">Nenhuma conta encontrada</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal de Confirmação de Exclusão -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirmar Exclusão</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Deseja excluir a conta <strong id="modalAccountName"></strong>? Esta ação não pode ser desfeita.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <form id="deleteForm" method="post">
                    <input type="hidden" id="deleteAccountId" name="id" />
                    <button type="submit" class="btn btn-danger">Excluir</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Criação de Conta -->
<div class="modal fade" id="createAccountModal" tabindex="-1" role="dialog" aria-labelledby="createAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createAccountModalLabel">Nova Conta</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createAccountForm" method="post" asp-page-handler="Add">
                    <div class="form-group">
                        <label for="Nome">Nome</label>
                        <input type="text" id="Nome" name="Conta.Nome" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="valor">Valor</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">R$</span>
                            </div>
                            <input type="text" id="valor" name="Conta.Valor" class="form-control" required
                                   pattern="^\d+([.,]\d{1,2})?$" title="Número com até duas casas decimais" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="DataVencimento">Data de Vencimento</label>
                        <input type="date" id="DataVencimento" name="Conta.DataVencimento" class="form-control" required />
                    </div>
                    <button type="submit" class="btn btn-success w-100">Adicionar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Edição de Conta -->
<div class="modal fade" id="editAccountModal" tabindex="-1" role="dialog" aria-labelledby="editAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAccountModalLabel">Editar Conta</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editAccountForm" method="post" asp-page-handler="Edit">
                    <input type="hidden" id="editAccountId" name="Conta.Id" />
                    <div class="form-group">
                        <label for="editNome">Nome</label>
                        <input type="text" id="editNome" name="Conta.Nome" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="editValor">Valor</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">R$</span>
                            </div>
                            <input type="text" id="editValor" name="Conta.Valor" class="form-control" required
                                   pattern="^\d+([.,]\d{1,2})?$" title="Número com até duas casas decimais" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="editDataVencimento">Data de Vencimento</label>
                        <input type="date" id="editDataVencimento" name="Conta.DataVencimento" class="form-control" required />
                    </div>
                    <button type="submit" class="btn btn-success w-100">Salvar Alterações</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Pagamento de Conta -->
<div class="modal fade" id="paymentModal" tabindex="-1" role="dialog" aria-labelledby="paymentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentModalLabel">Pagamento de Conta</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="paymentForm" method="post" asp-page-handler="Edit">
                    <input type="hidden" id="paymentAccountId" name="Conta.Id" />

                    <div class="form-group">
                        <label for="paymentNome">Nome</label>
                        <input type="text" id="paymentNome" name="Conta.Nome" class="form-control" readonly />
                    </div>

                    <div class="form-group">
                        <label for="paymentValor">Valor</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">R$</span>
                            </div>
                            <input type="text" id="paymentValor" name="Conta.Valor" class="form-control" readonly />
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="paymentDataVencimento">Data de Vencimento</label>
                        <input type="date" id="paymentDataVencimento" name="Conta.DataVencimento" class="form-control" readonly />
                    </div>

                    <div class="form-group">
                        <label for="paymentDataPagamento">Data de Pagamento</label>
                        <input type="date" id="paymentDataPagamento" name="Conta.DataPagamento" class="form-control" required />
                    </div>

                    <button type="submit" class="btn btn-success w-100">Confirmar Pagamento</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Rodapé -->
<footer class="bg-dark text-white mt-4 py-2">
    <div class="container text-center">
        <p class="mb-0" style="font-size: 0.85rem;">
            Desenvolvedor: Eduardo Moraes - Data de Build: @DateTime.Now.ToString("dd/MM/yyyy")
        </p>
    </div>
</footer>

@section Scripts {
    <!-- Inclua o jQuery, Popper.js e o Bootstrap -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <!-- Inclua o Bootstrap e o FontAwesome -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">

    <script>
        $(document).ready(function () {
            // Funcionalidade de filtro
            var toggleButton = document.getElementById('toggleFilterBtn');
            var filterForm = document.getElementById('filterForm');
            var dateFilter = document.getElementById('dateFilter');
            var startDate = document.getElementById('startDate');
            var endDate = document.getElementById('endDate');

            // Configura os campos de data
            const today = new Date().toISOString().split('T')[0];
            startDate.value = today;
            endDate.value = today;

            toggleButton.addEventListener('click', function () {
                filterForm.style.display = (filterForm.style.display === 'none' || filterForm.style.display === '') ? 'block' : 'none';
                toggleButton.innerHTML = (filterForm.style.display === 'block') ? '<i class="fas fa-filter"></i> Ocultar Filtros' : '<i class="fas fa-filter"></i> Mostrar Filtros';
            });

            dateFilter.addEventListener('change', function () {
                var selectedValue = dateFilter.value;
                var today = new Date();
                var start = new Date();
                var end = new Date();

                switch (selectedValue) {
                    case 'Last7Days':
                        start.setDate(today.getDate() - 7);
                        break;
                    case 'Last15Days':
                        start.setDate(today.getDate() - 15);
                        break;
                    case 'Last20Days':
                        start.setDate(today.getDate() - 20);
                        break;
                    case 'ThisMonth':
                        start.setDate(1);
                        end = new Date(today.getFullYear(), today.getMonth() + 1, 0);
                        break;
                    default:
                        start = end = null;
                        break;
                }

                if (start && end) {
                    startDate.value = formatDate(start);
                    endDate.value = formatDate(end);
                    startDate.disabled = endDate.disabled = true;
                } else {
                    startDate.disabled = endDate.disabled = false;
                }
            });

            function formatDate(date) {
                var year = date.getFullYear();
                var month = String(date.getMonth() + 1).padStart(2, '0');
                var day = String(date.getDate()).padStart(2, '0');
                return `${year}-${month}-${day}`;
            }
        });
    </script>

    <!-- Inclua o arquivo JS externo -->
    <script src="~/js/site.js"></script>
}
